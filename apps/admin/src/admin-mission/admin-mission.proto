syntax = "proto3";

package admin_mission;

service GrpcAdminMissionService {
  rpc Create(CreateInput) returns (Result);
  rpc Update(UpdateInput) returns (Result);
  rpc FindOne(FindOneInput) returns (Result);
}

message Empty {}

message CreateInput {
  int32 campaignId = 1;
  string title = 2;
  string detailExplain = 3;
  int32 openingDate = 4;
  int32 closingDate = 5;
  repeated CreateRewardRuleInput rewardRules = 6;
  repeated Conditions judgmentConditions = 7;
  repeated Conditions userConditions = 8;
  repeated GrantTarget grantTarget = 9;
}

message CreateRewardRuleInput {
  string key = 1;
  string currency = 2;
  int32 limitValue = 3;
}

message Conditions {
  string name = 1;
  string operator = 2;
  string value = 3;
}
message GrantTarget {
  string user = 1;
  int32 amount = 2;
  string currency = 3;
  string wallet = 4;
}
message RewardRuleResult {
  int32 createdAt = 1;
  int32 updatedAt = 2;
  int32 id = 3;
  string key = 4;
  string currency = 5;
  int32 limitValue = 6;
  int32 releaseValue = 7;
}
message Result {
  int32 campaignId = 1;
  string title = 2;
  string detailExplain = 3;
  int32 openingDate = 4;
  int32 closingDate = 5;
  repeated RewardRuleResult rewardRules = 6;
  repeated Conditions judgmentConditions = 7;
  repeated Conditions userConditions = 8;
  repeated GrantTarget grantTarget = 9;
  int32 id = 10;
  int32 createdAt = 11;
  int32 updatedAt = 12;
}
message UpdateInput {
  int32 id = 1;
  int32 campaignId = 2;
  string title = 3;
  string detailExplain = 4;
  int32 openingDate = 5;
  int32 closingDate = 6;
  repeated UpdateRewardRuleInput rewardRules = 7;
  repeated Conditions judgmentConditions = 8;
  repeated Conditions userConditions = 9;
  repeated GrantTarget grantTarget = 10;
}
message UpdateRewardRuleInput {
  int32 id =1;
  string key = 2;
  string currency = 3;
  int32 limitValue = 4;
}
message FindOneInput {
  int32 id = 1;
}
