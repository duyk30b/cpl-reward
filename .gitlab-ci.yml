stages:
  - build
  - deploy

.build_template:
  stage: build
  image:
    name: amazon/aws-cli:2.2.38
    entrypoint: [""]
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://0.0.0.0:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_HOST
    - docker build -f $DOCKERFILE_PATH -t $ECR_HOST/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $ECR_HOST/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA

.deploy_template:
  stage: deploy
  image: curlimages/curl
  script:
    - |
      curl -X POST "$GITOPS_HOOK_URL" \
      -d "{ \"path\": \"$VALUES_PATH\", \"key\": \"$IMAGE_TAG_KEY\", \"image_tag\": \"$CI_COMMIT_SHORT_SHA\", \"secret\": \"$GITOPS_HOOK_SECRET\" }" \
      -H "Content-Type: application/json"

.deploy_template_prod_v2:
  stage: deploy
  image: curlimages/curl
  script:
    - |
      curl -X POST "$GIT_HOOK_URL_PROD_V2" \
      -d "{ \"path\": \"$VALUES_PATH\", \"key\": \"$IMAGE_TAG_KEY\", \"image_tag\": \"$CI_COMMIT_SHORT_SHA\", \"secret\": \"$GITOPS_HOOK_SECRET\" }" \
      -H "Content-Type: application/json"

.deploy_template_demo:
  stage: deploy
  image: curlimages/curl
  script:
    - |
      curl -X POST "$GIT_HOOK_URL_DEMO" \
      -d "{ \"path\": \"$VALUES_PATH\", \"key\": \"$IMAGE_TAG_KEY\", \"image_tag\": \"$CI_COMMIT_SHORT_SHA\", \"secret\": \"$GITOPS_HOOK_SECRET\" }" \
      -H "Content-Type: application/json"



build_dev:
  extends: .build_template
  environment:
    name: dev
  variables:
    IMAGE_NAME: dev-customer-reward
    DOCKERFILE_PATH: ./Dockerfile.dev
  only:
    - dev

deploy_dev:
  extends: .deploy_template
  environment:
    name: dev
  variables:
    VALUES_PATH: /_helm_templates/cpl-customer-reward/values-dev.yaml
    IMAGE_TAG_KEY: tag
  only:
    - dev

deploy_dev_new:
  extends: .deploy_template_dev
  needs: 
    - deploy_dev
  environment:
    name: dev
  variables:
    VALUES_PATH: /_helm_templates/customer-reward/values-dev.yaml
    IMAGE_TAG_KEY: tag
  only:
    - dev

# deploy_dev_exchange:
#   extends: .deploy_template
#   environment:
#     name: dev-exchange
#   variables:
#     VALUES_PATH: /_helm_templates/cpl-customer-reward/values-dev-exchange.yaml
#     IMAGE_TAG_KEY: tag
#   only:
#     - dev


build_staging-v2:
  extends: .build_template
  environment:
    name: staging-v2
  variables:
    IMAGE_NAME: stg-v2-customer-reward
    DOCKERFILE_PATH: ./Dockerfile
  only:
    - staging


deploy_staging-v2:
  extends: .deploy_template
  environment:
    name: staging-v2
  variables:
    VALUES_PATH: /_helm_templates/cpl-customer-reward/values-staging-v2.yaml
    IMAGE_TAG_KEY: tag
  only:
    - staging


build_release:
  extends: .build_template
  environment:
    name: release
  variables:
    IMAGE_NAME: prod-v2-customer-reward
    DOCKERFILE_PATH: ./Dockerfile
  only:
    - release

deploy_release:
  extends: .deploy_template_prod_v2
  environment:
    name: release
  variables:
    VALUES_PATH: /_helm_templates/customer-reward/values-prod.yaml
    IMAGE_TAG_KEY: tag
  only:
    - release
  when: manual

build_demo:
  extends: .build_template
  environment:
    name: demo
  variables:
    IMAGE_NAME: demo-customer-reward
    DOCKERFILE_PATH: ./Dockerfile
  only:
    - demo

deploy_demo:
  extends: .deploy_template_demo
  environment:
    name: demo
  variables:
    VALUES_PATH: /_helm_templates/customer-reward/values-demo.yaml
    IMAGE_TAG_KEY: tag
  only:
    - demo



