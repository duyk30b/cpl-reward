syntax = "proto3";

package admin_mission;

service GrpcAdminMissionService {
  rpc Create(CreateInput) returns (Result);
  rpc Update(UpdateInput) returns (Result);
  rpc FindOne(FindOneInput) returns (Result);
  rpc GetMissionsByCampaign(MissionFilterInput) returns (MissionsResult);
}

message Empty {}

message CreateInput {
  int32 campaignId = 1;
  string title = 2;
  string detailExplain = 3;
  int32 openingDate = 4;
  int32 closingDate = 5;
  repeated CreateRewardRule rewardRules = 6;
  repeated JudgmentConditions judgmentConditions = 7;
  repeated UserConditions userConditions = 8;
  repeated GrantTarget grantTarget = 9;
  int32 priority = 10;
  string guideLink = 11;
  int32 limitReceivedReward = 12;
}

message CreateRewardRule {
  string key = 1;
  string currency = 2;
  int32 limitValue = 3;
}

/*
 * user = [user, referer_user]
 * wallet = [
     REWARD_BALANCE, REWARD_CASHBACK,
     REWARD_DIVIDEND, DIRECT_BALANCE,
     DIRECT_CASHBACK, DIRECT_DIVIDEND,
   ]
 */
message GrantTarget {
  string user = 1;
  int32 amount = 2;
  string currency = 3;
  string wallet = 4;
}
message RewardRuleResult {
  int32 createdAt = 1;
  int32 updatedAt = 2;
  int32 id = 3;
  string key = 4;
  string currency = 5;
  int32 limitValue = 6;
  int32 releaseValue = 7;
}
message Result {
  int32 campaignId = 1;
  string title = 2;
  string detailExplain = 3;
  int32 openingDate = 4;
  int32 closingDate = 5;
  repeated RewardRuleResult rewardRules = 6;
  repeated JudgmentConditions judgmentConditions = 7;
  repeated UserConditions userConditions = 8;
  repeated GrantTarget grantTarget = 9;
  int32 id = 10;
  int32 createdAt = 11;
  int32 updatedAt = 12;
  int32 priority = 13; // default: 0
}
message UpdateInput {
  int32 id = 1;
  int32 campaignId = 2;
  string title = 3;
  string detailExplain = 4;
  int32 openingDate = 5;
  int32 closingDate = 6;
  repeated UpdateRewardRule rewardRules = 7;
  repeated JudgmentConditions judgmentConditions = 8;
  repeated UserConditions userConditions = 9;
  repeated GrantTarget grantTarget = 10;
  int32 priority = 11; // default: 0
  string guideLink = 12;
  int32 limitReceivedReward = 13;
}
message UpdateRewardRule {
  int32 id = 1;
  string key = 2;
  string currency = 3;
  int32 limitValue = 4;
}
message FindOneInput {
  int32 id = 1;
}

/*
 * eventName = [
      AUTH_USER_LOGIN, AUTH_USER_CHANGE_EMAIL,
      AUTH_USER_CREATED, AUTH_USER_LOGOUT,
      AUTH_USER_CHANGE_PASSWORD, AUTH_USER_AUTHENTICATOR_STATUS_UPDATED
   ]
 */
message JudgmentConditions {
  string eventName = 1;
  string property = 2;
  string operator = 3;
  string value = 4;
}
message UserConditions {
  string property = 1;
  string operator = 2;
  string value = 3;
}

message MissionFilterInput {
  string campaignId = 1;
}

message MissionsResult {
  repeated Result missions = 1;
}
